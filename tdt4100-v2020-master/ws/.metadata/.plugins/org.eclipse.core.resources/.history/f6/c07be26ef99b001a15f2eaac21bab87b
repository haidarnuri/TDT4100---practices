package EksamenKont2019;

import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;

import javafx.css.converter.StringConverter;
import javafx.fxml.FXML;
import javafx.scene.control.Button;
import javafx.scene.control.TextField;
import javafx.util.converter.LocalDateStringConverter;

public class BikeRentalController {

	@FXML public TextField fromInput = new TextField();
	@FXML public TextField toInput = new TextField();
	@FXML public Button button1 = new Button("+ 1 hour");
	@FXML public Button butto2 = new Button("- 1 hour");
	@FXML public Button button3 = new Button("Rent");

    LocalDateTime dateFromString;
    DateTimeFormatter formatter = DateTimeFormatter.ofPattern( "hh:mm" );
    
	
	@FXML
	public void plus1HourAction() {
		this.dateFromString = getFromTime();
		this.dateFromString.plusHours(1);
		this.toInput.setText(this.dateFromString.toString());
	}
	
	@FXML
	public void minus1HourAction() {
		this.dateFromString = getFromTime();
		this.dateFromString.plusHours(-1);
		this.toInput.setText(this.dateFromString.toString());
	}
	
	@FXML
	public void rentAction() {
		LocalDateTime start = getFromTime();
		LocalDateTime returnTime = getToTime();
		//Videre beregninger i klassene jeg har laget. 
		
	}
	
	/**
	 * @return a LocalDataTime object corresponding to the from input field value
	 */
	private LocalDateTime getFromTime() {
		return LocalDateTime.parse(this.fromInput.getText(), formatter);
		
	}
	/**
	 * Updates the from input field value according to the LocalDateTime argument
	 * @param time
	 */
	private void setFromTime(final LocalDateTime time) {
		this.fromInput.setText(time.toString());
	}
	 
	/**
	 * @return a LocalDataTime object corresponding to the from input field value
	 */
	private LocalDateTime getToTime() {
		return LocalDateTime.parse(this.toInput.getText(), formatter);
	}
	
	
	
	
	
	
	
	
	
}
