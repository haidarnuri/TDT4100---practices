package EksamenKont2016;


public class Course {
	
	//Tenker at man ikke kan endre en fagkoden når den er satt. 
		private final String code;
		private double credits;
		private String time;
		
		private char semester;
		private int year;
		
		//Validerer at koden og semesteret ikke er null
		public Course(String code) {
			checkIfNotNull(code);
			this.code=code;
		}	
		
		 
	      /**
	       * Sets the time that this Course is taught. The format is the semester
	       * (char) followed by the year. The year may be shortened to two digits;
	       * if it is below 50 then 2000 should be added, otherwise 1900.
	       * E.g. S16 means Spring 2016, while F86 means Fall 1986.
	       * @param time The time in the format <semester><year>
	       * @throws IllegalArgumentException if the format is incorrect
	       */
		
		public void setTime(String time) {
			//Sjekker om strengen er tom eller null.	
			
			checkIfNotNull(time);
			checkIfRightFormat(time);
			//Validerer om tiden inneholder kun tall.
			checkIfContainsLettersAndNumbers(time);
			//Validerer om tiden er to siffer eller fire siffer. Ikke tillatt med for eks tre siffer. 
			
			//Finere med stor bokstav.
			this.semester=time.toUpperCase().charAt(0);
			int tempYear = Integer.parseInt(time.substring(1));
							
		}
		
		//Denne validerer at det skal starte med en bokstav og 2 eller 4 siffer. 
		 private void checkIfRightFormat(String time) {
		        if(!time.matches("^[A-Z]{1}\\d{2,4}$")) {
		        	throw new IllegalArgumentException("Has to begin with one letter and then two or four digits");
		        }
		    }
		
		//validerer om at bokstavene og sifrene er på riktig plass. 
		private void checkIfContainsLettersAndNumbers(String time) {
			if(Character.isDigit(time.charAt(0))) {
				throw new IllegalArgumentException("The first element har to be a letter");
			}else {
				for(int i=1;i<time.length();i++) {
					if(!Character.isDigit(time.charAt(i))) {
						throw new IllegalArgumentException("The letters after the first has to be digits!");
					}
				}
				
			}
		}
				
		public int getYear() { 
			return this.year; 
		}
	      
	    public char getSemester() { 
	    	return this.semester; 
	    }
	  
		
		public void setCredits(double credits) {
			this.credits = credits;
		}

		public double getCredits() {
				return credits;
		}
		
		public String getTime() {
			return getSemester()+String.valueOf(getYear());
		}
	      
		//Lager en generell metode som sjekker at verdiene ikke er null
		private void checkIfNotNull(String validate) {
			if(validate == null) {
				throw new IllegalArgumentException("The input is unknown");
			}		
		}
		
		public static void main(final String[] args) {
			Course course = new Course("TDT4100");
			course.setTime("gt546456");
			System.out.println(course.getTime());
			
		}


}



