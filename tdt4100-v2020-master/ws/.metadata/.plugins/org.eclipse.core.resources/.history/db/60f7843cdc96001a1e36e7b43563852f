package EksamenKont2016;

import java.util.ArrayList;
import java.util.List;

public class Person {
	
	private List<Course> courses = new ArrayList<>();
	private List<Exam> exams = new ArrayList<>();
	
	private String name;
	
	public Person(String name) {
		//Validerer at navnet ikke er null, tomt eller noe annet enn bokstaver
		validateName(name);
		this.name=name;
	}
	
	public String getName() {
		return this.name;
	}
	
	/**
     * Adds a Course to this Person, if no Course is registered
     * for the same code, year and semester.
     * @param course
     * @return true if the course was added, false otherwise
     */
    public boolean addCourse(Course course) { 
    	boolean addedCourse = false;
    	if(!courses.contains(course)) {
    		courses.add(course);
    		addedCourse=true;
    	}
    	return addedCourse; 			
    }
    

	
	//Private metoder og main under her. 
    
    private boolean checkIfContainsCourse(Course course) {
    	boolean containsCourse = false;
    	for(Course tempCourse:courses) {
    		if(tempCourse.getCode().equals(course.getCode()) && tempCourse.compareTo(course)==0) {
    			containsCourse=true;
    			break;
    		}
    	}
    	return containsCourse;
    }
    
    
	private void validateName(String name) {
		if(name==null || name.isEmpty()) {
			throw new IllegalArgumentException("Navnet kan ikke være null eller tomt");
		}
		char[] letters = name.toCharArray();
		for(char chars:letters) {
			//Det er greit med mellomrom i navnene. 
			if(!Character.isLetter(chars) && chars!= ' ') {
				throw new IllegalArgumentException("Må inneholde KUN bokstaver");
			}
		}
	}
	
	
	
	public static void main(final String[] args) {
		Course course = new Course("TDT4100");
		Exam examResult = new Exam(course, 'F');
		Person person = new Person("rfefr fer");
		
		System.out.println(person.getName());
}
}
