package EksamenKont2017;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.Iterator;
import java.util.List;

/**
 * Represents a set of (pre-defined) Courses that are ordered as a whole
 */
//Implementerer Itrable grensesnittet slik at jeg bestemmer hvordan et Meal objekt skal bli iterert
public class Meal extends MenuItem implements Iterable<Course>{
  
   
    private Collection<Course> courses = new ArrayList<>();
  
    public Meal(String name, String description, Course ...courses) {
        super(name,description);
        this.courses = Arrays.asList(courses);
    }
     
	public Collection<Course> getCourses() {
		return courses;
	}
	
	/*
	 * 
	 */
	public void addCourse(Course course) {
		checkIfCourseHasName(course);
		if(!courses.contains(course)) {
			courses.add(course);
		}
	}
	
	public void removeCourse(Course course) {
		courses.remove(course);
	}
	
	
	@Override
	public Iterator<Course> iterator() {
		return getCourses().iterator();
	}
    
	//Sjekker kun navnet på retten. Tenker at det ikke er så farlig med beskrivelsen. 
	private void checkIfCourseHasName(Course course) {
		if(course.getName()==null || course.getName().isEmpty()) {
			throw new IllegalArgumentException("Retten din må ha et navn");
		}
	}
	
	
	/*
	 * Bruker static som gjør at man ikke er avhengig av å kalle denne metoden gjennom
	 *et objekt fra klassen
	 */
	public static Collection<Course> asList(Course ...courseAsArray) {
		Collection<Course> allCourses = new ArrayList<>();
		for(int i=0;i<courseAsArray.length;i++) {
			allCourses.add(courseAsArray[i]);
		}		
		return allCourses;
	}
	
	//Bruker dette som en test underveis. 
    public static void main(String[] args) {
    	Course course1 = new Course("Biff","mye kjøtt");
    	Course course2 = new Course("salat","ingen kjøtt");
    	Course[] courses = {course1, course2};
    	Collection<Course> coursesAsList = Meal.asList(courses);
    	coursesAsList.stream()
    				 .forEach(course -> System.out.println(course));
   
    }

	
    
    
    

}
